// output: 132132

struct Node {
    data: i64
    next: Node?
}

struct CircularList {
    private node: Node?

    fun default() -> owned CircularList {
        return new owned CircularList(node: none)
    }

    fun push(mut self, data: i64) {
        if .node != none {
            let next = .node.next
            .node.next = new Node(data: data, next: next)
        } else {
            .node = new Node(data: data, next: none)
            .node.next = .node
        }
    }

    fun next(mut self) -> i64 {
        if .node != none {
            let ret = .node.data

            .node = .node.next
            return ret
        } else {
            return 0
        }
    }
}

fun helper() -> owned CircularList {
    let list = CircularList::default()

    return list
}

fun main() {
    mut list = helper()

    list.push(1)
    list.push(2)
    list.push(3)

    println(list.next())
    println(list.next())
    println(list.next())
    println(list.next())
    println(list.next())
    println(list.next())
}